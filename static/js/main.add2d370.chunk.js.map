{"version":3,"sources":["constants/index.js","actions/index.js","components/Header/Header.js","components/AddToDo/AddToDo.js","components/ToDoList/ToDoList.js","components/Footer/Footer.js","components/App/App.js","reducers/index.js","store.js","serviceWorker.js","index.js"],"names":["types","SUBMIT_TODO","DELETE_TODO","COMPLETE_TODO","todoId","Header","_ref","title","react_default","a","createElement","className","AddTodo","input","submitTodo","onSubmit","event","preventDefault","value","htmlFor","id","name","ref","element","type","ToDoList","todos","deleteTodo","completeTodo","todoItems","map","todo","key","onClick","style","textDecoration","completed","color","text","Footer","author","date","connect","state","todoListApp","dispatch","components_Header_Header","AddToDo_AddToDo","components_ToDoList_ToDoList","components_Footer_Footer","initialState","reducer","arguments","length","undefined","action","Object","objectSpread","concat","toConsumableArray","filter","reducers","combineReducers","createStore","Boolean","window","location","hostname","match","ReactDOM","render","es","store","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.add2d370.chunk.js","sourcesContent":["const types = {\n  SUBMIT_TODO: 'SUBMIT_TODO',\n  DELETE_TODO: 'DELETE_TODO',\n  COMPLETE_TODO: 'COMPLETE_TODO'\n};\n\nexport default types;","import types from \"../constants/\";\n\nlet todoId = 0;\n\nconst nextId = () => {\n  todoId += 1;\n  return todoId;\n};\n\nexport const submitTodo = text => ({\n  type: types.SUBMIT_TODO,\n  id: nextId(),\n  text,\n  completed: false\n})\n\nexport const deleteTodo = id => ({\n  type: types.DELETE_TODO,\n  id,\n})\n\nexport const completeTodo = id => ({\n  type: types.COMPLETE_TODO,\n  id\n})\n","import React from \"react\";\n\nimport './Header.scss';\n\nconst Header = ({ title }) => {\n  return (\n    <header className=\"header\">\n      <h1 className=\"title\">{title}</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./AddToDo.scss\";\n\nconst AddTodo = ({ submitTodo }) => {\n  let input;\n\n  return (\n    <div className=\"form__container\">\n      <form\n        onSubmit={event => {\n          event.preventDefault();\n          submitTodo(input.value);\n          input.value = \"\";\n        }}\n      >\n        <label htmlFor=\"add-todo\" className=\"todo__label\">\n          Task\n        </label>\n\n        <input\n          id=\"add-todo\"\n          name=\"add-todo\"\n          className=\"todo__input\"\n          ref={element => {\n            input = element;\n          }}\n        />\n\n        <button type=\"submit\" className=\"btn btn--submit\">\n          Add\n          <i className=\"fas fa-plus-circle\" />\n        </button>\n      </form>\n    </div>\n  );\n};\n\nAddTodo.propTypes = {\n  submitTodo: PropTypes.func.isRequired\n};\n\nexport default AddTodo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./ToDoList.scss\";\n\nconst ToDoList = ({ todos, deleteTodo, completeTodo }) => {\n  const todoItems = todos.map(todo => (\n    <li key={todo.id}>\n      <button\n        type=\"button\"\n        className=\"btn btn--delete\"\n        onClick={() => deleteTodo(todo.id)}\n      >\n        Delete\n        <i className=\"fas fa-minus-circle\" />\n      </button>\n\n      <span\n        className=\"todo__text\"\n        style={{\n          textDecoration: todo.completed ? \"line-through\" : \"\",\n          color: todo.completed ? \"lightgrey\" : \"\"\n        }}\n      >\n        {todo.text}\n      </span>\n\n      <span\n        onClick={() => completeTodo(todo.id)}\n        style={{\n          color: todo.completed ? \"orange\" : \"lightgrey\"\n        }}\n        className=\"todo__icon\"\n      >\n        <i className=\"fas fa-check-circle\" />\n      </span>\n    </li>\n  ));\n\n  return (\n    <div className=\"list__container\">\n      <ul className=\"todo__list\">{todoItems}</ul>\n    </div>\n  );\n};\n\nToDoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  deleteTodo: PropTypes.func\n};\n\nexport default ToDoList;\n","import React from \"react\";\n\nimport './Footer.scss';\n\nconst Footer = ({ author, date }) => {\n  return (\n    <footer className=\"footer\">\n      <span>{author} </span>\n      <span>{date}</span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { submitTodo, deleteTodo, completeTodo } from \"../../actions/\";\n\nimport Header from \"../Header/Header\";\nimport AddToDo from \"../AddToDo/AddToDo\";\nimport ToDoList from \"../ToDoList/ToDoList\";\nimport Footer from \"../Footer/Footer\";\n\nconst App = ({ todos, submitTodo, deleteTodo, completeTodo }) => (\n  <div className=\"wrapper\">\n    <Header title=\"Just Do It!\" />\n    <main>\n      <AddToDo submitTodo={submitTodo} />\n      <ToDoList\n        todos={todos}\n        deleteTodo={deleteTodo}\n        completeTodo={completeTodo}\n      />\n    </main>\n    <Footer author=\"Mogeee\" date=\"2019\" />\n  </div>\n);\n\nApp.propTypes = {\n  submitTodo: PropTypes.func.isRequired,\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      text: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired\n    })\n  ).isRequired,\n  deleteTodo: PropTypes.func,\n  completeTodo: PropTypes.func\n};\n\nconst mapStateToProps = state => state.todoListApp;\n\nconst mapDispatchToProps = dispatch => ({\n  submitTodo: text => {\n    if (text) {\n      dispatch(submitTodo(text));\n    }\n  },\n\n  deleteTodo: id => {\n    dispatch(deleteTodo(id));\n  },\n\n  completeTodo: id => {\n    dispatch(completeTodo(id));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import types from \"../constants/\";\n\nexport const initialState = {\n  todos: []\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.SUBMIT_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            id: action.id,\n            text: action.text,\n            completed: false\n          }\n        ]\n      };\n\n    case types.DELETE_TODO:\n      return {\n        ...state,\n        todos: [...state.todos.filter(todo => todo.id !== action.id)]\n      };\n\n    case types.COMPLETE_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos.map(todo =>\n            todo.id === action.id\n              ? { ...todo, completed: !todo.completed }\n              : todo\n          )\n        ]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers, createStore } from \"redux\";\nimport todoListApp from \"./reducers/\";\n\nconst reducers = combineReducers({\n  todoListApp\n});\n\nexport default createStore(\n  reducers\n  /* Uncomment line below to enable redux devtools */\n  // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}